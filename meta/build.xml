<?xml version="1.0" ?>
<project name="Riviera" default="test">

	<!-- The version of the library -->
	<property name="build.version" value="0.1" />

	<!-- The directory that houses all intermediate files -->
	<property name="build.dir" location="build" />

	<!-- The directory that will store all compiled classes -->
	<property name="build.classes.dir" location="${build.dir}/classes" />

	<!-- The root of all projects, used to find buildable classes -->
	<property name="build.root.dir" location=".." />

	<!-- The directory that houses all libraries used to build this project -->
	<property name="build.lib.dir" value="lib" />

	<path id="compile.srcdir">
		<dirset dir="${build.root.dir}">
			<include name="com.bluespot*/src" />
			<exclude name="com.bluespot*-tests/**" />
		</dirset>
	</path>

	<!-- The classpath that contains all third-party libraries for this project -->
	<path id="compile.classpath">
		<fileset dir="${build.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- The directories that will store test artificats -->
	<property name="test.dir" value="${build.dir}/tests" />
	<property name="test.data.dir" value="${test.dir}/data" />
	<property name="test.reports.dir" value="${test.dir}/reports" />
	<property name="test.classes.dir" location="${test.dir}/classes" />

	<!-- The directory that stores our distributable files -->
	<property name="dist.dir" location="dist" />

	<!-- The name of the distributable jar file -->
	<property name="dist.jar.name" value="riviera.jar" />

	<property name="dist.jar.location" value="${dist.dir}/${dist.jar.name}" />

	<!-- Source locations for our tests -->
	<path id="test.compile.srcdir">
		<dirset dir="${build.root.dir}">
			<include name="com.bluespot*-tests/src" />
		</dirset>
	</path>

	<!-- Classpath for our tests -->
	<path id="test.compile.classpath">
		<path refid="compile.classpath" />
		<pathelement location="${dist.jar.location}" />
	</path>

	<!-- **************** TARGETS **************** -->

	<target name="init" description="Creates all directories used in building this project.">
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="test-init" description="Creates all directories used while testing this project.">
		<mkdir dir="${test.data.dir}" />
		<mkdir dir="${test.reports.dir}" />
		<mkdir dir="${test.classes.dir}" />
	</target>

	<target name="clean" description="Removes any intermediate files.">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="compile" depends="init" description="Compiles this project.">
		<javac destdir="${build.classes.dir}" debug="on">
			<src refid="compile.srcdir" />
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	<target name="dist" depends="compile" description="Creates redistributables of this project.">
		<jar destfile="${dist.dir}/${dist.jar.name}" basedir="${build.classes.dir}" />
	</target>

	<target name="test" depends="test-compile" description="Runs all tests.">
		<junit printsummary="false" haltonfailure="false" errorproperty="test.failed" failureproperty="test.failed">
			<formatter type="xml" />
			<classpath>
				<path refid="test.compile.classpath" />
				<pathelement location="${test.classes.dir}" />
			</classpath>
			<batchtest todir="${test.data.dir}">
				<fileset dir="${test.classes.dir}">
					<include name="**/*Test.class" />
					<include name="**/*Test?.class" />
					<exclude name="**/*$*" />
					<exclude name="**/Abstract*" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${test.data.dir}">
			<fileset dir="${test.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports.dir}" />
		</junitreport>		<fail if="test.failed">			Tests failed. Check ${test.reports.dir}		</fail>
	</target>

	<target name="test-compile" depends="dist, test-init" description="Compiles all tests.">
		<javac destdir="${test.classes.dir}" debug="on">
			<src refid="test.compile.srcdir" />
			<classpath refid="test.compile.classpath" />
		</javac>
	</target>

</project>
